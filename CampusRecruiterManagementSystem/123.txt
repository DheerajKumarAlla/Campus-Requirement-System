jessa and arrays

/* USING THE HEADER FILES AT THE START*/
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
/*using namespaces */
using namespace std;

/*setting up constants and proceeding with the sum */
const int MAXN = 201;
/* declaration area */
int l[MAXN], r[MAXN];
int o[MAXN], hix[MAXN];
int n, m;

int match[MAXN], vis[MAXN];
/*Using vectors */
vector< int > E[MAXN];

/* using the depth first search */
int dfs( int x ) {
  if ( vis[x] ) 
      return 0;
  vis[x] = 1;
    /* Type conversions  and matching using the depth first search*/
  for ( int i = 0; i < (int)E[x].size(); ++i ) {
    int w = E[x][i];
     /* using the matching function by using a conditional statements*/
    if ( match[w] == -1 || dfs( match[w] ) ) {
      match[w] = x;
      return 1;
    }
  }
  return 0;
}
/* THE MAIN FUNCTION */
int main() {
  scanf( "%d%d", &n, &m );  
/* A LOOP IS BEING RUN */
  for( int i = 0; i < n; ++i ) {
    o[i] = l[i] = 0;
    hix[i] = r[i] = n-1;
  }
/* DECREMENTS AND INCREMENTS ACCORDING TO THE PROBLEM */
  for( int i = 0; i < m; ++i ) {
    int t, x, y, v;
    scanf( "%d%d%d%d", &t, &x, &y, &v );
    --x, --y, --v;
    l[v] = max( l[v], x );
    r[v] = min( r[v], y );
    for( int j = x; j <= y; ++j ) {
      if ( t == 1 ) hix[j] = min( hix[j], v );
      else o[j] = max( o[j], v );
    }
  }
/*MATCHING*/

  memset( match, -1, sizeof match ); 

  for( int i = 0; i < n; ++i )
    for( int j = l[i]; j <= r[i]; ++j )
      if ( i >= o[j] && i <= hix[j] )
        E[i].push_back(j);
  /* USING A FLAG VARIABLE*/
  int DUP = 1; 
  for( int i = 0; i < n && DUP; ++i ) {
    memset( vis, 0, sizeof vis );
    DUP = dfs(i);
  }
/* condition run for the dup to surpass*/

  if ( DUP ) {
    for( int i = 0; i < n; ++i ) 
      printf( "%d%c", match[i]+1, " \n"[i==n-1] );
  } else {
    puts( "-1" );
  }

  return 0;
}

















